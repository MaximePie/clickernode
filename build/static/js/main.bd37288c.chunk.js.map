{"version":3,"sources":["Contexts/socketContext.js","components/molecules/ClickerCard.jsx","assets/images/coin.png","assets/images/upgradeicon.svg","components/molecules/UpgradesCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["React","createContext","ClickerCard","count","rate","onIncrement","socket","useContext","SocketContext","className","onClick","emit","UpgradesCard","onPurchase","upgradeBackgroundColor","data-tooltip","src","upgradeIllustration","alt","coin","require","config","App","useState","counter","setCounter","setRate","setSocket","useEffect","socketIOClient","on","data","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAEeA,G,MAAAA,IAAMC,cAAc,OCCpB,SAASC,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,YACxCC,EAASN,IAAMO,WAAWC,GAUhC,OACI,sBAAKC,UAAU,4BAAf,UACI,0BAASA,UAAU,0BAAnB,UACI,qBAAIA,UAAU,QAAd,UAAuBN,EAAvB,YACA,4BAAIC,OAER,wBAAQK,UAAU,wCAAwCC,QAXlE,WACIJ,EAAOK,KAAK,oBACZN,KASI,kBCpBG,UAA0B,iCCA1B,MAA0B,wCCK1B,SAASO,EAAT,GAA4C,IAArBC,EAAoB,EAApBA,WAAYV,EAAQ,EAARA,MACxCG,EAASN,IAAMO,WAAWC,GAchC,IAAMM,EAZO,KAY0BX,EACjC,iEACA,8BAEN,OACI,qBAAKM,UAAU,6BAAf,SACI,sBACIA,UAAW,oDAAsDK,EACjEC,eAAa,WACbL,QAhBZ,WALa,IAMEP,IACPG,EAAOK,KAAK,mBACZE,MAUA,UAKI,qBAAKJ,UAAU,8BAA8BO,IAAKC,EAAqBC,IAAI,YAC3E,qBAAKT,UAAU,6BAA6BO,IAAKG,EAAMD,IAAI,gBC1B3EE,EAAQ,IAAUC,SA0CHC,MAtCf,WAAgB,IAAD,EACmBC,mBAAS,GAD5B,mBACJC,EADI,KACKC,EADL,OAEaF,mBAAS,GAFtB,mBAEJnB,EAFI,KAEEsB,EAFF,OAGiBH,mBAAS,MAH1B,mBAGJjB,EAHI,KAGIqB,EAHJ,KA4BX,OAvBAC,qBAAU,WACND,EAAuGE,SACxG,IAEHD,qBAAU,WACFtB,IACAA,EAAOwB,GAAG,iBAAiB,SAAAC,GACvBN,EAAWM,MAEfzB,EAAOwB,GAAG,cAAc,SAAAC,GACpBL,EAAQK,SAGjB,CAACzB,IAWA,cAAC,EAAc0B,SAAf,CAAwBC,MAAO3B,EAA/B,SACI,sBAAKG,UAAU,mCAAf,UACI,cAACP,EAAD,CAAaC,MAAOqB,EAASpB,KAAMA,EAAMC,YAAa,kBAAMoB,EAAWD,EAAU,MACjF,cAACZ,EAAD,CAAcC,WAT1B,WACIa,EAAQtB,EAAO,GACfqB,EAAWD,EAAU,MAO8BrB,MAAOqB,UC9BnDU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd37288c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default React.createContext(null);\r\n","import React from 'react';\r\nimport SocketContext from \"../../Contexts/socketContext\"\r\n\r\nexport default function ClickerCard({count, rate, onIncrement}) {\r\n    const socket = React.useContext(SocketContext);\r\n\r\n    /**\r\n     * Emits the incrementCounter Event\r\n     */\r\n    function increment() {\r\n        socket.emit('incrementCounter');\r\n        onIncrement();\r\n    }\r\n\r\n    return (\r\n        <div className=\"box ClickerCard tile is-6\">\r\n            <section className=\"hero ClickerCard__title\">\r\n                <h2 className=\"title\">{count} Babas</h2>\r\n                <p>{rate}</p>\r\n            </section>\r\n            <button className=\"button is-primary ClickerCard__button\" onClick={increment}>+</button>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/coin.4feaf3e7.png\";","export default __webpack_public_path__ + \"static/media/upgradeicon.358f1593.svg\";","import React from 'react';\r\nimport coin from '../../assets/images/coin.png';\r\nimport upgradeIllustration from '../../assets/images/upgradeicon.svg';\r\nimport SocketContext from \"../../Contexts/socketContext\";\r\n\r\nexport default function UpgradesCard({onPurchase, count}) {\r\n    const socket = React.useContext(SocketContext);\r\n\r\n    const cost = 100;\r\n\r\n    /**\r\n     * Emits the PurchaseUpgrade event\r\n     */\r\n    function purchase() {\r\n        if (cost < count) {\r\n            socket.emit('purchaseUpgrade');\r\n            onPurchase();\r\n        }\r\n    }\r\n\r\n    const upgradeBackgroundColor = cost >= count\r\n        ? 'UpgradesCard__upgrade--isDisabled has-background-primary-light'\r\n        : \"has-background-primary-dark\";\r\n\r\n    return (\r\n        <div className=\"box UpgradesCard tile is-6\">\r\n            <div\r\n                className={\"UpgradesCard__upgrade tile is-2  has-tooltip-top \" + upgradeBackgroundColor}\r\n                data-tooltip=\"Rate + 1\"\r\n                onClick={purchase}\r\n            >\r\n                <img className=\"UpgradesCard__upgrade_image\" src={upgradeIllustration} alt=\"Upgrade\"/>\r\n                <img className=\"UpgradesCard__upgrade_coin\" src={coin} alt=\"Argent\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './assets/main.scss';\nimport ClickerCard from './components/molecules/ClickerCard'\nimport UpgradesCard from './components/molecules/UpgradesCard'\nimport SocketContext from './Contexts/socketContext'\nrequire('dotenv').config();\n\nconst ENDPOINT = process.env.NODE_ENV === 'production' ? null : \"http://localhost:4001\";\n\nfunction App() {\n    const [counter, setCounter] = useState(0);\n    const [rate, setRate] = useState(0);\n    const [socket, setSocket] = useState(null);\n\n    useEffect(() => {\n        setSocket(ENDPOINT ? socketIOClient(ENDPOINT, {transports: ['websocket', 'polling', 'flashsocket']}) : socketIOClient());\n    }, []);\n\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"updateCounter\", data => {\n                setCounter(data);\n            });\n            socket.on(\"updateRate\", data => {\n                setRate(data);\n            });\n        }\n    }, [socket]);\n\n    /**\n     * Updates the rate state with setRate\n     */\n    function purchaseUpgrade() {\n        setRate(rate + 1);\n        setCounter(counter - 100);\n    }\n\n    return (\n        <SocketContext.Provider value={socket}>\n            <div className=\"App has-background-primary-light\">\n                <ClickerCard count={counter} rate={rate} onIncrement={() => setCounter(counter + 1)}/>\n                <UpgradesCard onPurchase={purchaseUpgrade} count={counter}/>\n            </div>\n        </SocketContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}