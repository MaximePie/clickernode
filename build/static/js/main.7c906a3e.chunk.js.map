{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ENDPOINT","process","PORT","socket","App","useState","response","counter","setCounter","useEffect","socketIOClient","transports","on","data","dateTime","onClick","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAEMA,EAAWC,mIAAYC,KAAO,KAAO,wBAEvCC,EAAS,KAkCEC,MAhCf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,aAEiBD,mBAAS,IAF1B,mBAENE,EAFM,KAEGC,EAFH,KAqBb,OAjBAC,qBAAU,YACRN,EAASH,EAAWU,IAAeV,EAAU,CAACW,WAAY,CAAC,YAAa,UAAW,iBAAmBD,OAI/FE,GAAG,iBAAiB,SAAAC,GACzBL,EAAWK,QAEZ,IAUC,wCACO,sBAAMC,SAAUR,EAAhB,SAA2BA,IAChC,gCACE,4CAAeC,KACf,wBAAQQ,QAThB,WACEZ,EAAOa,KAAK,qBAQN,+BCpBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c906a3e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = process.env.PORT ? null : \"http://localhost:4001\";\n\nlet socket = null;\n\nfunction App() {\n  const [response, setResponse] = useState(\"\");\n  const [counter, setCounter] = useState(0);\n\n  useEffect(() => {\n    socket = ENDPOINT ? socketIOClient(ENDPOINT, {transports: ['websocket', 'polling', 'flashsocket']}) : socketIOClient();\n    // socket.on(\"FromAPI\", data => {\n    //   setResponse(data);\n    // });\n    socket.on(\"counterUpdate\", data => {\n      setCounter(data);\n    });\n  }, []);\n\n  /**\n   * Increase the state counter\n   */\n  function increaseCounter() {\n    socket.emit('incrementCounter');\n  }\n\n  return (\n      <div>\n        It's <time dateTime={response}>{response}</time>\n        <div>\n          <p>Compteur : {counter}</p>\n          <button onClick={increaseCounter}>Click me !</button>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}