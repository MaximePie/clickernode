{"version":3,"sources":["components/molecules/ClickerCard.jsx","assets/images/coin.png","assets/images/upgradeicon.svg","components/molecules/UpgradesCard.jsx","App.js","reportWebVitals.js","index.js"],"names":["ClickerCard","onIncrement","count","rate","className","onClick","UpgradesCard","onPurchase","src","upgradeIllustration","alt","coin","require","config","socket","App","useState","counter","setCounter","setRate","useEffect","socketIOClient","on","data","console","log","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAEe,SAASA,EAAT,GAAkD,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,KAErD,OACI,sBAAKC,UAAU,4BAAf,UACI,0BAASA,UAAU,0BAAnB,UACI,qBAAIA,UAAU,QAAd,UAAuBF,EAAvB,YACA,4BAAIC,OAER,wBAAQC,UAAU,wCAAwCC,QAASJ,EAAnE,kBCVG,UAA0B,iCCA1B,MAA0B,wCCI1B,SAASK,EAAT,GAAqC,IAAdC,EAAa,EAAbA,WAClC,OACI,qBAAKH,UAAU,6BAAf,SACI,sBAAKA,UAAU,8DAA8DC,QAASE,EAAtF,UACI,qBAAKH,UAAU,8BAA8BI,IAAKC,EAAqBC,IAAI,YAC3E,qBAAKN,UAAU,6BAA6BI,IAAKG,EAAMD,IAAI,gBCJ3EE,EAAQ,IAAUC,SAElB,IAEIC,EAAS,KA4CEC,MA1Cf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,gCAEmBA,mBAAS,IAF5B,mBAEJC,EAFI,KAEKC,EAFL,OAGaF,mBAAS,GAHtB,mBAGJb,EAHI,KAGEgB,EAHF,KAkCX,OA7BAC,qBAAU,YACNN,EAAsGO,OAC/FC,GAAG,QAAQ,SAAAC,GACdC,QAAQC,IAAI,mBAAqBF,MAErCT,EAAOQ,GAAG,iBAAiB,SAAAC,GACvBL,EAAWK,MAEfT,EAAOQ,GAAG,kBAAkB,SAAAC,GACxBJ,EAAQI,QAEb,IAmBC,sBAAKnB,UAAU,mCAAf,UACI,cAACJ,EAAD,CAAaE,MAAOe,EAAShB,YAPrC,WACIuB,QAAQC,IAAI,sBACZX,EAAOY,KAAK,qBAKmDvB,KAAMA,IACjE,cAACG,EAAD,CAAcC,WAhBtB,WACIiB,QAAQC,IAAI,4BACZX,EAAOY,KAAK,0BCtBLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f66f09c9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ClickerCard({onIncrement, count, rate}) {\r\n\r\n    return (\r\n        <div className=\"box ClickerCard tile is-6\">\r\n            <section className=\"hero ClickerCard__title\">\r\n                <h2 className=\"title\">{count} Babas</h2>\r\n                <p>{rate}</p>\r\n            </section>\r\n            <button className=\"button is-primary ClickerCard__button\" onClick={onIncrement}>+</button>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/coin.4feaf3e7.png\";","export default __webpack_public_path__ + \"static/media/upgradeicon.358f1593.svg\";","import React from 'react';\r\nimport coin from '../../assets/images/coin.png';\r\nimport upgradeIllustration from '../../assets/images/upgradeicon.svg';\r\n\r\nexport default function UpgradesCard({onPurchase}) {\r\n    return (\r\n        <div className=\"box UpgradesCard tile is-6\">\r\n            <div className=\"UpgradesCard__upgrade tile is-2 has-background-primary-dark\" onClick={onPurchase}>\r\n                <img className=\"UpgradesCard__upgrade_image\" src={upgradeIllustration} alt=\"Upgrade\"/>\r\n                <img className=\"UpgradesCard__upgrade_coin\" src={coin} alt=\"Argent\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useState} from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport './assets/main.scss';\nimport ClickerCard from './components/molecules/ClickerCard'\nimport UpgradesCard from './components/molecules/UpgradesCard'\nrequire('dotenv').config()\n\nconst ENDPOINT = process.env.NODE_ENV === 'production' ? null : \"http://localhost:4001\";\n\nlet socket = null;\n\nfunction App() {\n    const [response, setResponse] = useState(\"\");\n    const [counter, setCounter] = useState(0);\n    const [rate, setRate] = useState(0);\n\n    useEffect(() => {\n        socket = ENDPOINT ? socketIOClient(ENDPOINT, {transports: ['websocket', 'polling', 'flashsocket']}) : socketIOClient();\n        socket.on(\"Test\", data => {\n            console.log(\"Received info : \" + data);\n        });\n        socket.on(\"updateCounter\", data => {\n            setCounter(data);\n        });\n        socket.on(\"upgradesUpdate\", data => {\n            setRate(data);\n        });\n    }, []);\n\n    /**\n     * Emit the purchasing upgrade event\n     */\n    function purchaseUpgrade() {\n        console.log(\"Emitting purchaseUpgrade\");\n        socket.emit('purchaseUpgrade');\n    }\n\n    /**\n     * Increase the state counter\n     */\n    function increaseCounter() {\n        console.log(\"Increasing Counter\");\n        socket.emit('incrementCounter');\n    }\n\n    return (\n        <div className=\"App has-background-primary-light\">\n            <ClickerCard count={counter} onIncrement={increaseCounter} rate={rate}/>\n            <UpgradesCard onPurchase={purchaseUpgrade}/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}